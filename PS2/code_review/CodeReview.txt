- Make package name a bit more descriptive

Address.java :
- The author made getters and setters to set the value of the Address Entry, which makes it prone to changes using the setters and thus not avoiding mutability.
- Author does not use builder class to create the address object which is considered to be the best practice in these types of classes
- The author failed to override the hash code function which is required in the case these address objects are ever being stored in a hash type of object example hashmap or hashset
- No null checking in any of the setters (Line 67,75,83,91)
- Extra blank lines (Example Line 118,135,142 )

AddressBook.java :
- Creating multiple copies of a single address by putting it in different maps( 4 to exact ) , which leads to a lot of data replication which is not a good design choice keeping scalability in mind (AddressBook.java:60)
- Extra bank line ( example Line 96,104 etc )
- The function remove address from map wonâ€™t work as expected since for example, if there are 2 people with the same address, this code AddressBook.java:102-108 might not work as expected and remove the other contact with same address. 
- The same case applies for all different searchMaps
- Some collections, like HashSet, HashMap or HashTable use the hash code to store its data and to retrieve it. If you don't implement hashcode() and equals() in a consistent manner, then they will not function properly. Since hashcode() was not implemented in address.java addAddress() (AddressBook.java:176) and removeAddress() (AddressBook.java:186) might will not work as expected.
- Extra level of encapsulation that was not required
