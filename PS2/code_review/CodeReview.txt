- Make package name a bit more descriptive something like nyu.pqs.ps1.addressbook

Address.java :
- The author FORGOT to add “email address” as a component to the Address class as instructed in the problem statement.
- Thus due to missing out on email address, a searchByEmailAddress function is also missing
- The author made getters and setters to set the value of the Address Entry, which makes it prone to changes using the setters and thus not avoiding mutability.
- Author does not use builder class to create the address object which is considered to be the best practice in these types of classes
- The author failed to override the hash code function which is required in the case these address objects are ever being stored in a hash type of object example hashmap or hashset
- It is a good practice to override the toString() function
- No null checking in any of the setters (Line 67,75,83,91)
- Extra blank lines (Example Line 118,135,142 )
- Forgot to write the annotation of @Override over the equals method. (Address.java:133)

AddressBook.java :
- The javadocs for the addressbook class are very minimal and do not explain the functionality of the class. It should explain the features and functionality the API provides at least. AddressBook.java:19
- Creating multiple copies of a single address by putting it in different maps( 4 to exact ) , which leads to a lot of data replication which is not a good design choice keeping scalability in mind (AddressBook.java:60)
- Avoid Mutability by making addresses i.e a list of Address final ( AddressBook.java:25)
- Extra bank line ( example Line 96,104 etc )
- The function remove address from map won’t work as expected since for example, if there are 2 people with the same address, this code AddressBook.java:102-108 might not work as expected and remove the other contact with same address. Even if you just want to remove one of them.
- No null checkin on addAddress ( AddressBook.java:161 ) could lead to null entries or empty entries being added to the addressbook.
- The same case applies for all different searchMaps
- Some collections, like HashSet, HashMap or HashTable use the hash code to store its data and to retrieve it. If you don't implement hashcode() and equals() in a consistent manner, then they will not function properly. Since hashcode() was not implemented in address.java addAddress() (AddressBook.java:176) and removeAddress() (AddressBook.java:186) might will not work as expected.
- Extra level of encapsulation that was not required. Example AddressBook.java:161 and 176
- AddressBook.java:305 doesn’t check for a file not found exception, it’s a good idea to check for that kind of exceptions so that the user can recover from those erros
